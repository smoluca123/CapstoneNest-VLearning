generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model auth_code {
  code_id Int    @id @default(autoincrement())
  code    String @db.VarChar(255)
}

model type_user {
  id        Int     @id @default(autoincrement())
  type_name String? @db.VarChar(255)
  level     Int     @default(0)
  user      user[]
}

model user {
  id            Int             @id @default(autoincrement())
  email         String?         @db.VarChar(255)
  username      String?         @db.VarChar(255)
  password      String?         @db.VarChar(255)
  full_name     String?         @db.VarChar(255)
  phone         String?         @db.VarChar(255)
  type          Int             @default(1)
  refresh_token String?         @db.VarChar(255)
  status        Int             @default(1) @db.SmallInt
  hidden        Int             @default(0) @db.SmallInt
  enroll_course enroll_course[]
  type_user     type_user       @relation(fields: [type], references: [id], onUpdate: Restrict, map: "user_type_user")

  @@index([type], map: "user_type_user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model category_course {
  id            Int      @id @default(autoincrement())
  category_name String?  @db.VarChar(255)
  hidden        Int      @default(0)
  course        course[]
}

model course {
  id              Int             @id @default(autoincrement())
  aliases         String          @db.VarChar(255)
  course_name     String          @db.VarChar(255)
  description     String?         @db.Text
  category        Int
  create_at       DateTime?       @db.Date
  course_img      String?         @db.VarChar(255)
  views           Int             @default(0)
  students        Int             @default(0)
  hidden          Int             @default(0)
  category_course category_course @relation(fields: [category], references: [id], onUpdate: Restrict, map: "course_category_course")
  enroll_course   enroll_course[]

  @@index([category], map: "course_category_course")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model enroll_course {
  id        Int    @id @default(autoincrement())
  user_id   Int
  course_id Int
  status    Int
  course    course @relation(fields: [course_id], references: [id], onUpdate: Restrict, map: "enroll_course_course_id")
  user      user   @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "enroll_course_user_id")

  @@index([course_id], map: "enroll_course_course_id")
  @@index([user_id], map: "enroll_course_user_id")
}
